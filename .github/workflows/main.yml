name: Build Electron App

on:
  release:
    types: [created]  # This will trigger the workflow when a new release is created

permissions:
  contents: write  # Allow the workflow to write to the repository contents
  actions: read    # Allow the workflow to read actions
  issues: read     # Allow the workflow to read issues
  pull-requests: read  # Allow the workflow to read pull requests

jobs:

  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v2
    
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '22'
        
    - name: Install dependencies
      run: yarn install --frozen-lockfile
        
    - name: Build app
      run: yarn build
        
    - name: Package app
      run: |
        if [ "${{ runner.os }}" == "Linux" ]; then
          yarn build:linux
        elif [ "${{ runner.os }}" == "Windows" ]; then
          yarn build:win
        elif [ "${{ runner.os }}" == "macOS" ]; then
          yarn build:mac
        fi
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.ref }}  # Use the tag name from the release
        release_name: Release ${{ github.ref }}  # Use the tag name for the release name
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/your-app-file  # Change this to the path of your built app
        asset_name: your-app-file  # Change this to the desired name for the asset
        asset_content_type: application/octet-stream  # Change this to the appropriate content type
