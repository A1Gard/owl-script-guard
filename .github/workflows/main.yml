name: Build Electron App

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

#permissions:
#  contents: write
#  packages: write

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Package app
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            yarn build:linux
          elif [ "${{ runner.os }}" == "Windows" ]; then
            yarn build:win
          elif [ "${{ runner.os }}" == "macOS" ]; then
            yarn build:mac
          fi

      - name: Determine Asset to Upload
        id: determine_asset
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            if [ -f "dist/owl-script-gaurd.AppImage" ]; then
              echo "asset_path=dist/owl-script-gaurd.AppImage" >> $GITHUB_ENV
              echo "asset_name=owl-script-gaurd.AppImage" >> $GITHUB_ENV
            else
              echo "No valid Linux asset found."
              exit 1
            fi
          elif [ "${{ runner.os }}" == "Windows" ]; then
            if [ -f "dist/owl-script-gaurd.exe" ]; then
              echo "asset_path=dist/owl-script-gaurd.exe" >> $GITHUB_ENV
              echo "asset_name=owl-script-gaurd.exe" >> $GITHUB_ENV
            else
              echo "No valid Windows asset found."
              exit 1
            fi
          elif [ "${{ runner.os }}" == "macOS" ]; then
            if [ -f "dist/owl-script-gaurd.dmg" ]; then
              echo "asset_path=dist/owl-script-gaurd.dmg" >> $GITHUB_ENV
              echo "asset_name=owl-script-gaurd.dmg" >> $GITHUB_ENV
            elif [ -f "dist/owl-script-gaurd.zip" ]; then
              echo "asset_path=dist/owl-script-gaurd.zip" >> $GITHUB_ENV
              echo "asset_name=owl-script-gaurd.zip" >> $GITHUB_ENV
            else
              echo "No valid macOS asset found."
              exit 1
            fi
          fi

      - name: Upload Release Asset
        uses: svenstaro/upload-release-action@2.6.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          asset_name: ${{ env.asset_name }}
#          asset_content_type: 'application/octet-stream'
          file:  ${{ env.asset_path }}
          overwrite: true
