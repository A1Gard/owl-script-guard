name: Build Electron App

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Package app for Linux
        if: runner.os == 'Linux'
        run: yarn build:linux

      - name: Package app for Windows
        if: runner.os == 'Windows'
        run: yarn build:win

      - name: Package app for macOS
        if: runner.os == 'macOS'
        run: yarn build:mac

      - name: Determine Asset to Upload Linux and mac
        id: determine_asset_linux
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          if [ "${{ runner.os }}" == "Linux" ]; then
            if [ -f "dist/owl-script-gaurd.AppImage" ]; then
              echo "asset_path=dist/owl-script-gaurd.AppImage" >> $GITHUB_ENV
              echo "asset_name=owl-script-gaurd.AppImage" >> $GITHUB_ENV
            else
              echo "No valid Linux asset found."
              exit 1
            fi
          elif [ "${{ runner.os }}" == "macOS" ]; then
            if [ -f "dist/owl-script-gaurd.dmg" ]; then
              echo "asset_path=dist/owl-script-gaurd.dmg" >> $GITHUB_ENV
              echo "asset_name=owl-script-gaurd.dmg" >> $GITHUB_ENV
            elif [ -f "dist/owl-script-gaurd.zip" ]; then
              echo "asset_path=dist/owl-script-gaurd.zip" >> $GITHUB_ENV
              echo "asset_name=owl-script-gaurd.zip" >> $GITHUB_ENV
            else
              echo "No valid macOS asset found."
              exit 1
            fi
          fi

      - name: Determine Asset to Upload windows
        id: determine_asset_win
        if: runner.os == 'Windows'
        run: |
          echo "asset_path=dist\owl-script-gaurd-setup.exe" >> $GITHUB_ENV
          echo "asset_name=owl-script-gaurd-setup.exe" >> $GITHUB_ENV

      - name: Upload Release Asset
        uses: svenstaro/upload-release-action@2.6.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          asset_name: ${{ env.asset_name }}
#          asset_content_type: 'application/octet-stream'
          file:  ${{ env.asset_path }}
          overwrite: true
